1. purpose of making constructor as private

It is possible to write constructor as private but we cannot access private outside of the class.

        
package com.in;

public class ClassA 
{
	int a;float b;String c;
   private ClassA() //private constructor
   {
	a=22;b=32.5f;c="Java";
   System.out.println(a+" "+b+" "+c+" ");
   }
   public static void main(String args[])
   {
	   ClassA obj=new ClassA();
	  
   }
}

 output:22 32.5 Java

package com.in;

public class ClassB {

	public static void main(String[] args) 
	{
	ClassA obj1=new ClassA();	

	}
}
  
Output:Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	The constructor ClassA() is not visible

	at com.in.ClassB.main(ClassB.java:7)


2.Can I make constructor as final-impact

 No,constructors cannot be final.

package com.or;

public class Test 
{
final Test() //Illegal modifier for the constructor in type Test; only public, protected & private are permitted
{

}
}

3.If I keep int near by Constructor-what happens

If we privide data type near constructor, consider as method.

package com.i.demo;

public class Test 
{
int id;
public int Student()
{
	System.out.println("default");
	return 0;
}

public int getId() {
	return id;
}

public void setId(int id) {
	this.id = id;
}

}

package com.i.demo;

public class Main {

	public static void main(String[] args) 
	{
    Test obj=new Test();
    obj.Student();

	}

}

Output:default

4.if u creat 3 obj - it  should print 3 obj

package com.Emp.demo;

public class Employee 
{
private static int a=0;

public static void main(String[]args)
{
	Employee emp=new Employee();
	emp.a+=1;
	Employee emp1=new Employee();
	emp.a+=1;
	Employee emp2=new Employee();
	emp.a+=1;
	System.out.println(emp.a);
}
}

Output:3.

5.Write a Java program to create and display a unique three-digit number using 1, 2, 3, 4. Also count how many three-digit numbers are there.
123 143 132 134 241 234 132 342 .... ....

package com.Emp.demo;

public class Unique {

	public static void main(String[] args) 
	{
	 for(int i=1;i<=4;i++) {
		 for(int j=1;j<=4;j++) {
			 for(int k=1;k<=4;k++) {
				 if(i!=j && i!=k && j!=k) 
				 {
					 System.out.println(i+ " "+j+ " "+k+" ");
				 }
			 }
		 }
	 }

	}

}
Output:

1 2 3 
1 2 4 
1 3 2 
1 3 4 
1 4 2 
1 4 3 
2 1 3 
2 1 4 
2 3 1 
2 3 4 
2 4 1 
2 4 3 
3 1 2 
3 1 4 
3 2 1 
3 2 4 
3 4 1 
3 4 2 
4 1 2 
4 1 3 
4 2 1 
4 2 3 
4 3 1 
4 3 2 

6.Write a Java program to print odd numbers from 1 to 99. Prints one number per line.

package com.Emp.demo;

public class Odd {

	public static void main(String[] args) 
	{
		int m=1;
		int n=99;
		for(int i=m;i<=n;i++) 
		{
			if(i%2!=0)
			{
			System.out.println(i);	
			}
		}

	}

}
Output:
1
3
5
7
9
11
13
15
17
19
21
23
25
27
29
31
33
35
37
39
41
43
45
47
49
51
53
55
57
59
61
63
65
67
69
71
73
75
77
79
81
83
85
87
89
91
93
95
97
99

7.Write a Java program that accepts an integer (n) and computes the value of n+nn+nnn. Sample Output: Input number: 5
5 + 55 + 555

package com.Emp.demo;

public class sum {

	public static void main(String[] args) {
		int a=1;
		int aa=a*10+a;
		int aaa=aa*10+a;
		int b=a+aa+aaa;
System.out.println(a+ "+" +aa+ "+" +aaa+ "=" +b);
	}

}

Output=1+11+111=123


8.public static int x = 7  -  class variable
  public int y = 3         - Instance Variable


 